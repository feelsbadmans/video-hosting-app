/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface VideoEntityRequestBody
 */
export interface VideoEntityRequestBody {
  /**
   *
   * @type {string}
   * @memberof VideoEntityRequestBody
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof VideoEntityRequestBody
   */
  description: string;
  /**
   *
   * @type {string}
   * @memberof VideoEntityRequestBody
   */
  source: string;
  /**
   *
   * @type {string}
   * @memberof VideoEntityRequestBody
   */
  author?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof VideoEntityRequestBody
   */
  allowedGroups?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof VideoEntityRequestBody
   */
  id?: number;
}

export function VideoEntityRequestBodyFromJSON(json: any): VideoEntityRequestBody {
  return VideoEntityRequestBodyFromJSONTyped(json, false);
}

export function VideoEntityRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): VideoEntityRequestBody {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: json['name'],
    description: json['description'],
    source: json['source'],
    author: !exists(json, 'author') ? undefined : json['author'],
    allowedGroups: !exists(json, 'allowedGroups') ? undefined : json['allowedGroups'],
    id: !exists(json, 'id') ? undefined : json['id'],
  };
}

export function VideoEntityRequestBodyToJSON(value?: VideoEntityRequestBody | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    description: value.description,
    source: value.source,
    author: value.author,
    allowedGroups: value.allowedGroups,
    id: value.id,
  };
}
