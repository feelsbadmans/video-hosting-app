/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import {
  CommonAuthResponse,
  CommonAuthResponseFromJSON,
  CommonAuthResponseToJSON,
  CreateUserDto,
  CreateUserDtoFromJSON,
  CreateUserDtoToJSON,
  LoginUserDto,
  LoginUserDtoFromJSON,
  LoginUserDtoToJSON,
  UserView,
  UserViewFromJSON,
  UserViewToJSON,
} from '../models';

export interface LoginRequest {
  loginUserDto?: LoginUserDto;
}

export interface RegisterRequest {
  createUserDto?: CreateUserDto;
}

/**
 *
 */
export class AuthApiApi extends runtime.BaseAPI {
  /**
   */
  async loginRaw(
    requestParameters: LoginRequest,
    initOverrides?: RequestInit,
  ): Promise<runtime.ApiResponse<CommonAuthResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/auth/login`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: LoginUserDtoToJSON(requestParameters.loginUserDto),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => CommonAuthResponseFromJSON(jsonValue));
  }

  /**
   */
  async login(requestParameters: LoginRequest = {}, initOverrides?: RequestInit): Promise<CommonAuthResponse> {
    const response = await this.loginRaw(requestParameters, initOverrides);
    return await response.value();
  }

  /**
   */
  async registerRaw(
    requestParameters: RegisterRequest,
    initOverrides?: RequestInit,
  ): Promise<runtime.ApiResponse<UserView>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/auth/register`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: CreateUserDtoToJSON(requestParameters.createUserDto),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => UserViewFromJSON(jsonValue));
  }

  /**
   */
  async register(requestParameters: RegisterRequest = {}, initOverrides?: RequestInit): Promise<UserView> {
    const response = await this.registerRaw(requestParameters, initOverrides);
    return await response.value();
  }
}
